from keras.models import load_model

imps = {
    'Соотношение матрица-наполнитель':Соотношение матрица-наполнитель',
    'Плотность, кг/м3':'Плотность, кг/м3',
    'модуль упругости, ГПа':'модуль упругости, ГПа',
    'Количество отвердителя, м.%':'Количество отвердителя, м.%',
    'Содержание эпоксидных групп,%_2':'Содержание эпоксидных групп,%_2',
    'Температура вспышки, С_2':'Температура вспышки, С_2',
    'Поверхностная плотность, г/м2':'Поверхностная плотность, г/м2',
    'Модуль упругости при растяжении, ГПа':'Модуль упругости при растяжении, ГПа',
    'Прочность при растяжении, МПа':'Прочность при растяжении, МПа',
    'Потребление смолы, г/м2':'Потребление смолы, г/м2',
    'Угол нашивки, град':'Угол нашивки, град',
    'Шаг нашивки':'Шаг нашивки',
    'Плотность нашивки':'Плотность нашивки'
}

def pred(params):
    model = load_model('models/model')
    return model.predict(params)

def inputs(imps):
    res = {}
    if 'Соотношение матрица-наполнитель' in imps:
        imps.pop('Соотношение матрица-наполнитель')
    for key, value in imps.items():
        while True:
        imp = input(f'Введите значение параметра "{key}": ')
        res[value] = float(imp)
    return result

if __name__ == '__main__':
    try:
        print('\n\n''Прогноз целевой перемнной "Соотношение матрица-наполнитель"\n')
        params = inputs(imps)
        preds = pred([[
            params['Плотность, кг/м3'],
            params['модуль упругости, ГПа'],
            params['Количество отвердителя, м.%'],
            params['Содержание эпоксидных групп,%_2'],
            params['Температура вспышки, С_2'],
            params['Поверхностная плотность, г/м2'],
            params['Модуль упругости при растяжении, ГПа'],
            params['Прочность при растяжении, МПа'],
            params['Потребление смолы, г/м2'],
            params['Угол нашивки, град'],
            params['Шаг нашивки'],
            params['Плотность нашивки']
        ]])
        print(
            '\n\n''f'Соотношение матрица-наполнитель: {predicted_value[0][0]}')
    except KeyboardInterrupt:
        print('\n\n''\tВыполнение программы прeрвано.\n')
